apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-logs-pvc
  namespace: academic-agent
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: nfs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-output-pvc
  namespace: academic-agent
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: academic-agent-app
  namespace: academic-agent
  labels:
    app: academic-agent
    component: application
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: academic-agent
  template:
    metadata:
      labels:
        app: academic-agent
        component: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: academic-agent
        image: academic-agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: academic-agent-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: academic-agent-config
              key: LOG_LEVEL
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: academic-agent-config
              key: METRICS_ENABLED
        - name: PROMETHEUS_PORT
          valueFrom:
            configMapKeyRef:
              name: academic-agent-config
              key: PROMETHEUS_PORT
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: academic-agent-config
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: academic-agent-secrets
              key: SECRET_KEY
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: academic-agent-secrets
              key: ENCRYPTION_KEY
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: academic-agent-secrets
              key: POSTGRES_PASSWORD
        - name: DATABASE_URL
          value: "postgresql://academic_agent:$(POSTGRES_PASSWORD)@academic-agent-postgres:5432/academic_agent_prod"
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: academic-agent-secrets
              key: GROQ_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: academic-agent-secrets
              key: OPENAI_API_KEY
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-output
          mountPath: /app/output
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: app-tmp
          mountPath: /app/tmp
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-logs
        persistentVolumeClaim:
          claimName: app-logs-pvc
      - name: app-output
        persistentVolumeClaim:
          claimName: app-output-pvc
      - name: app-config
        configMap:
          name: app-config-files
      - name: app-tmp
        emptyDir:
          sizeLimit: 10Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - academic-agent
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: academic-agent-service
  namespace: academic-agent
  labels:
    app: academic-agent
    component: application
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: academic-agent
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: academic-agent-ingress
  namespace: academic-agent
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - academic-agent.example.com
    secretName: academic-agent-tls
  rules:
  - host: academic-agent.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: academic-agent-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: academic-agent-hpa
  namespace: academic-agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: academic-agent-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-files
  namespace: academic-agent
data:
  production.yaml: |
    debug: false
    
    logging:
      level: INFO
      console_enabled: false
      file_enabled: true
      max_file_size: 52428800  # 50MB for production
      backup_count: 10
    
    processing:
      max_concurrent_agents: 4
      processing_timeout: 7200  # 2 hours for production
      batch_size: 5
      enable_checkpointing: true
    
    # Production-optimized agent settings
    agents:
      ingestion_agent:
        timeout: 1800  # 30 minutes for production
        max_retries: 5
      
      outline_agent:
        timeout: 900  # 15 minutes for production
        max_retries: 5
      
      notes_agent:
        timeout: 2700  # 45 minutes for production
        max_retries: 5
      
      quality_manager:
        timeout: 600  # 10 minutes for production
        max_retries: 5
      
      update_agent:
        timeout: 1800  # 30 minutes for production
        max_retries: 5
    
    # Less frequent feedback loops in production
    feedback_loops:
      - source: quality_manager
        target: notes_agent
        type: quality
        interval: 600
        enabled: true
      
      - source: quality_manager
        target: outline_agent
        type: quality
        interval: 900
        enabled: true
      
      - source: update_agent
        target: notes_agent
        type: improvement_suggestions
        interval: 1800
        enabled: true
      
      - source: notes_agent
        target: quality_manager
        type: content_verification
        interval: 900
        enabled: true
    
    # Higher quality thresholds for production
    quality_threshold: 0.85
    improvement_criteria:
      content_quality:
        threshold: 0.85
      clarity:
        threshold: 0.8
      structure:
        threshold: 0.9
      citations:
        threshold: 0.95
    
    # Enhanced inter-agent communication for production
    inter_agent_communication:
      enabled: true
      message_timeout: 180
      retry_count: 5
      max_log_size: 5000
      compression_enabled: true
    
    # Database configuration for production
    database:
      enabled: true
      type: postgresql
      connection_pool_size: 20
    
    # Metrics configuration
    metrics:
      enabled: true
      collection_interval: 60
      export:
        prometheus:
          enabled: true
          port: 9090