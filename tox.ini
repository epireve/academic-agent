[tox]
envlist = py39,py310,py311,py312,lint,type-check,security,docs
isolated_build = True

[testenv]
deps = 
    pytest
    pytest-cov
    pytest-mock
    pytest-asyncio
    -r requirements.txt
commands = 
    pytest tests/unit/ -v --cov=agents --cov=tools --cov-report=term-missing
setenv =
    TESTING = true
    LOG_LEVEL = DEBUG

[testenv:integration]
deps = {[testenv]deps}
commands = 
    pytest tests/integration/ -v -m "not slow" --cov=agents --cov=tools --cov-append

[testenv:slow]
deps = {[testenv]deps}
commands = 
    pytest tests/ -v -m "slow" --cov=agents --cov=tools --cov-append

[testenv:all]
deps = {[testenv]deps}
commands = 
    pytest tests/ -v --cov=agents --cov=tools --cov-report=html --cov-report=term-missing --cov-report=xml

[testenv:lint]
deps = 
    black
    flake8
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
commands = 
    black --check --diff agents/ tools/ tests/
    flake8 agents/ tools/ tests/

[testenv:format]
deps = 
    black
    isort
commands = 
    black agents/ tools/ tests/
    isort agents/ tools/ tests/

[testenv:type-check]
deps = 
    mypy
    types-requests
    types-python-dateutil
    -r requirements.txt
commands = 
    mypy agents/ tools/ --ignore-missing-imports --no-strict-optional

[testenv:security]
deps = 
    bandit
    safety
    semgrep
commands = 
    bandit -r agents/ tools/ -f txt
    safety check
    semgrep --config=auto agents/ tools/ || true

[testenv:docs]
deps = 
    sphinx
    sphinx-rtd-theme
    sphinx-autodoc-typehints
    -r requirements.txt
commands = 
    sphinx-apidoc -o docs/api agents/ tools/
    sphinx-build -b html docs/ docs/_build/html

[testenv:coverage]
deps = {[testenv]deps}
commands = 
    pytest tests/ --cov=agents --cov=tools --cov-report=html --cov-report=xml --cov-report=term-missing

[testenv:performance]
deps = 
    pytest-benchmark
    memory-profiler
    {[testenv]deps}
commands = 
    pytest tests/ -m "performance" --benchmark-only

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv

[coverage:run]
source = agents, tools
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    pass

[coverage:html]
directory = htmlcov